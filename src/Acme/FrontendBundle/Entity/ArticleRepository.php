<?php

namespace Acme\FrontendBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Snc\RedisBundle\Doctrine\Cache\RedisCache;
use Predis\Client;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    public function getArrArticleList($intCategory, $intLimit, $strOrderBy, $strOrderType, $cache_time = 0)
    {
        $predis = new RedisCache();
        $predis->setRedis(new Client());
        $cache_lifetime = $cache_time;
        return $this->getEntityManager()
            ->createQuery(
                "SELECT a.id id,
                        a.strTitle title,
                        a.intCategory category,
                        a.strThumb thumb,
                        a.timeCreateTime time,
                        a.textSummary summary
                    FROM AcmeFrontendBundle:Article a
                    WHERE a.intCategory = {$intCategory}
                    ORDER BY a.{$strOrderBy} {$strOrderType}
                "
            )
            ->setMaxResults($intLimit)
            ->setResultCacheDriver($predis)
            # set cache lifetime
            ->setResultCacheLifetime($cache_lifetime)
            ->getResult();
    }

    public function getQueryArticleList($intCategory, $strWhere = "", $cache_time = 0)
    {
        $predis = new RedisCache();
        $predis->setRedis(new Client());
        $cache_lifetime = $cache_time;
        return $this->getEntityManager()
            ->createQuery(
            "
                SELECT a.id id,
                       a.strTitle title,
                       a.intCategory category,
                       a.strThumb thumb,
                       a.timeCreateTime time,
                       a.textSummary summary
                 FROM AcmeFrontendBundle:Article a
                WHERE a.intCategory = {$intCategory}
                {$strWhere}
                ORDER BY a.timeCreateTime DESC
            "
            )
            ->setResultCacheDriver($predis)
            # set cache lifetime
            ->setResultCacheLifetime($cache_lifetime);
    }

}
