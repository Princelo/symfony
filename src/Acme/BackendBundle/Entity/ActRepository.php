<?php

namespace Acme\BackendBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Snc\RedisBundle\Doctrine\Cache\RedisCache;
use Predis\Client;

/**
 * ActRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActRepository extends EntityRepository
{
    public function getQueryActList($strWhere = null, $cache_time = 0)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                "
                SELECT a.id id,
                       a.intType type,
                       a.strTitle title,
                       a.strIntro intro,
                       a.strActFile file,
                       a.timeUploadDateTime upload_time,
                       a.strOtherLink other_link,
                       m.strShortName uploader
                FROM
                    AcmeBackendBundle:Act a
                    JOIN a.member m
                WHERE 1 = 1
                    {$strWhere}
            "
            );
        if($cache_time > 0)
        {
            $predis = new RedisCache();
            $predis->setRedis(new Client());
            $cache_lifetime = $cache_time;
            $query
                ->setResultCacheDriver($predis)
                ->setResultCacheLifetime($cache_lifetime);
        }
        return $query;
    }

    public function getArrActList($intCount, $strOrderField, $strOrderType, $cache_time = 0)
    {
        $query = $this->getEntityManager()
            ->createQuery(
            "
                SELECT
                    a.strTitle title,
                    a.id id,
                    a.strActFile file
                FROM
                    AcmeBackendBundle:Act a
                WHERE
                    a.intType = 1
                ORDER BY a.{$strOrderField} {$strOrderType}
            "
            )
            ->setMaxResults($intCount);
        if($cache_time > 0) {
            $predis = new RedisCache();
            $predis->setRedis(new Client());
            $cache_lifetime = $cache_time;
            $query
                ->setResultCacheDriver($predis)
                ->setResultCacheLifetime($cache_lifetime);
        }
        return $query->getResult();

    }
}
